 {
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "view-in-github"
   },
   "source": [
    "# 🧠 NeuroCortex SRDF Toy Example - Google Colab\n",
    "هذا الـ Notebook يقوم بتشغيل مثال **Toy Framework** الخاص بـ NeuroCortex SRDF على Google Colab.\n",
    "\n",
    "**المكونات الأساسية:**\n",
    "- **Trawler**: يحلل البيانات والأداء\n",
    "- **Generator**: يقترح تحسينات معمارية  \n",
    "- **Arbiter**: يتحقق ويختار أفضل التحسينات\n",
    "\n",
    "**🔗 روابط مهمة:**\n",
    "- [الورقة البيضاء الإنجليزية](https://github.com/mohammed-qaidalathwary/-NEUROCORTEX/blob/main/Self_Evolving_AI_Whitepaper_EN_Final.pdf)\n",
    "- [الورقة البيضاء العربية](https://github.com/mohammed-qaidalathwary/-NEUROCORTEX/blob/main/Self_Evolving_AI_Whitepaper_AR_Final.pdf)\n",
    "- [DOI: 10.5281/zenodo.16945431](https://doi.org/10.5281/zenodo.16945431)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "clone_repo",
    "outputId": "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
   },
   "outputs": [],
   "source": [
    "# 1️⃣ استنساخ المستودع مع التعامل مع الشرطة في الاسم\n",
    "!rm -rf /content/NEUROCORTEX\n",
    "!git clone https://github.com/mohammed-qaidalathwary/-NEUROCORTEX.git /content/NEUROCORTEX\n",
    "print(\"✅ تم استنساخ المستودع بنجاح\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "navigate_dir",
    "outputId": "b2c3d4e5-f6g7-8901-abcd-ef2345678901"
   },
   "outputs": [],
   "source": [
    "# 2️⃣ الانتقال إلى المسار الصحيح والتحقق\n",
    "import os\n",
    "os.chdir('/content/NEUROCORTEX/examples/srdf_toy')\n",
    "print(f\"📂 المسار الحالي: {os.getcwd()}\")\n",
    "print(\"📁 محتويات المجلد:\")\n",
    "!ls -la"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "install_deps",
    "outputId": "c3d4e5f6-g7h8-9012-abcd-ef3456789012"
   },
   "outputs": [],
   "source": [
    "# 3️⃣ تثبيت المتطلبات الأساسية\n",
    "!pip install numpy scikit-learn pandas matplotlib\n",
    "print(\"✅ تم تثبيت المتطلبات بنجاح\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "run_example",
    "outputId": "d4e5f6g7-h8i9-0123-abcd-ef4567890123"
   },
   "outputs": [],
   "source": [
    "# 4️⃣ تشغيل المثال والتأكد من إنشاء الملف\n",
    "!python run.py\n",
    "print(\"\\n📄 التحقق من إنشاء ملف output.json:\")\n",
    "if os.path.exists(\"output.json\"):\n",
    "    print(\"✅ تم إنشاء output.json بنجاح\")\n",
    "    !ls -la output.json\n",
    "else:\n",
    "    print(\"❌ لم يتم إنشاء الملف. جاري المحاولة بطريقة بديلة...\")\n",
    "    !python run.py > output.json 2>&1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "load_results",
    "outputId": "e5f6g7h8-i9j0-1234-abcd-ef5678901234"
   },
   "outputs": [],
   "source": [
    "# 5️⃣ قراءة وعرض النتائج مع معالجة الأخطاء\n",
    "import json\n",
    "\n",
    "try:\n",
    "    with open(\"output.json\", \"r\") as f:\n",
    "        data = json.load(f)\n",
    "    \n",
    "    print(\"🎉 تم تشغيل SRDF Toy Example بنجاح!\")\n",
    "    print(\"=\" * 50)\n",
    "    print(\"📊 النتائج:\")\n",
    "    print(f\"• عدد الجولات: {data.get('rounds', 'N/A')}\")\n",
    "    print(f\"• أفضل دقة achieved: {data.get('best_accuracy', 'N/A'):.4f}\")\n",
    "    print(f\"• أفضل نموذج: {data.get('best_model', {}).get('model_type', 'N/A')}\")\n",
    "    \n",
    "    print(\"\\n📋 التفاصيل الكاملة:\")\n",
    "    print(json.dumps(data, indent=4, ensure_ascii=False))\n",
    "    \n",
    "except FileNotFoundError:\n",
    "    print(\"❌ خطأ: ملف output.json غير موجود\")\n",
    "    print(\"🔍 محاولة التحميل من GitHub مباشرة...\")\n",
    "    \n",
    "    try:\n",
    "        from urllib.request import urlopen\n",
    "        github_url = \"https://raw.githubusercontent.com/mohammed-qaidalathwary/-NEUROCORTEX/main/examples/srdf_toy/output.json\"\n",
    "        with urlopen(github_url) as response:\n",
    "            data = json.loads(response.read().decode())\n",
    "        print(\"✅ تم تحميل النتائج من GitHub بنجاح\")\n",
    "        print(json.dumps(data, indent=4, ensure_ascii=False))\n",
    "    except Exception as e:\n",
    "        print(f\"❌ فشل التحميل: {e}\")\n",
    "        \n",
    "except json.JSONDecodeError:\n",
    "    print(\"❌ خطأ في تنسيق JSON. عرض المحتوى الخام:\")\n",
    "    with open(\"output.json\", \"r\") as f:\n",
    "        print(f.read())\n",
    "        \n",
    "except Exception as e:\n",
    "    print(f\"❌ خطأ غير متوقع: {e}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "verify_structure",
    "outputId": "f6g7h8i9-j0k1-2345-abcd-ef6789012345"
   },
   "outputs": [],
   "source": [
    "# 6️⃣ التحقق من هيكل المشروع للتشخيص\n",
    "print(\"🔍 التحقق النهائي من هيكل المشروع:\")\n",
    "print(\"=\" * 40)\n",
    "!find /content/NEUROCORTEX -name \"*.py\" -type f | head -10\n",
    "print(\"\\n📊 ملفات output المتاحة:\")\n",
    "!find /content -name \"output.json\" 2>/dev/null || echo \"⚠️  لا توجد ملفات output.json\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "contact_info"
   },
   "source": [
    "## 📧 معلومات التواصل\n",
    "- **البريد الإلكتروني**: Mohammedqaidalathwary@gmail.com\n",
    "- **المستودع الرئيسي**: [GitHub Repository](https://github.com/mohammed-qaidalathwary/-NEUROCORTEX)\n",
    "- **الورقة البيضاء**: [Zenodo DOI](https://doi.org/10.5281/zenodo.16945431)\n",
    "\n",
    "## 📝 ملاحظات مهمة\n",
    "1. تأكد من تنفيذ الخلايا بالترتيب\n",
    "2. إذا ظهرت أخطاء، افحص رسائل الخطأ بعناية\n",
    "3. يمكنك إعادة تشغيل الخلايا إذا لزم الأمر\n",
    "4. الملفات محفوظة في `/content/NEUROCORTEX/`"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "provenance": [],
   "include_colab_link": true
  },
  "kernelspec": {
   "display_name": "Python 3",
   "name": "python3"
  },
  "language_info": {
   "name": "python",
   "version": "3.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
 }
